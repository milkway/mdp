// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// binarymodel
Rcpp::List binarymodel(const arma::mat& distances, int m, double MAX_TIME, int THREADS, bool verbose);
RcppExport SEXP _mdp_binarymodel(SEXP distancesSEXP, SEXP mSEXP, SEXP MAX_TIMESEXP, SEXP THREADSSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type distances(distancesSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type MAX_TIME(MAX_TIMESEXP);
    Rcpp::traits::input_parameter< int >::type THREADS(THREADSSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(binarymodel(distances, m, MAX_TIME, THREADS, verbose));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mdp_binarymodel", (DL_FUNC) &_mdp_binarymodel, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_mdp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
